class test
   public static function basicTestInc(_start : int, _limit : int, _iterator: int) : int
      var i : int, summ : int, start : int, limit : int, iterator: int;

      start = _start;
      limit = _limit;
      iterator = _iterator;
      summ = 0;

      for i = start, i <= limit, iterator  do
          summ = summ + 1;
      end

      return summ;
   end

   public static function basicTestDec(_start : int, _limit : int, _iterator: int) : int
      var i : int, summ : int, start : int, limit : int, iterator: int;

      start = _start;
      limit = _limit;
      iterator = _iterator;
      summ = 0;

      for i = start, i >= limit, iterator  do
          summ = summ + 1;
      end

      return summ;
   end


   public static function withoutIteratorExprTest(_start : int, _limit : int) : int
      var i : int, summ : int, start : int, limit : int;

      start = _start;
      limit = _limit;
      summ = 0;

      for i = start, i <= limit  do
          summ = summ + 1;
      end

      return summ;
   end

   public static function changeValueOfInitExprTest( _limit : int) : int
      var i : int, summ : int, limit : int;

      limit = _limit;
      summ = 0;

      for i = 0, i <= limit  do
          summ = summ + i;
      end

      return summ;
   end
   --[InlineData("a", 3, 1, "aaa")]
   public static function nestedLoopTest(str : string, strRep : int, rep : int) : string
      var i : int, j : int, substr : string, resStr : string;
      resStr = "";
      for i = 0, i < rep do
         substr = "";
         for j = 0, j < strRep do
            substr = substr .. str;
         end
         if i > 0 then
            resStr = resStr .. "_";
         end
         resStr = resStr .. substr;
      end
      return resStr;
   end
end